<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <script src="https://js.stripe.com/v3/"></script> <!-- Include Stripe.js -->
</head>
<body>
  <h1>Welcome to your Dashboard, <%= user.name %></h1>
  <p>You are logged in with email: <%= user.email %></p>

  <!-- Stripe Subscription Button -->
  <button id="subscribe-button">Subscribe</button>

  <h2>Observable Framework Graph</h2>
  <div id="observable-graph"></div>
  <script src="https://d3js.org/d3.v7.min.js"></script> <!-- Include D3.js library -->
  <script type="module">
    // Example data for the bar chart
    const data = [
      { letter: 'A', frequency: 0.08167 },
      { letter: 'B', frequency: 0.01492 },
      { letter: 'C', frequency: 0.02782 },
      { letter: 'D', frequency: 0.04253 },
      { letter: 'E', frequency: 0.12702 },
      { letter: 'F', frequency: 0.02288 },
      { letter: 'G', frequency: 0.02015 },
      { letter: 'H', frequency: 0.06094 },
      { letter: 'I', frequency: 0.06966 },
      { letter: 'J', frequency: 0.00153 },
      { letter: 'K', frequency: 0.00772 },
      { letter: 'L', frequency: 0.04025 },
      { letter: 'M', frequency: 0.02406 },
      { letter: 'N', frequency: 0.06749 },
      { letter: 'O', frequency: 0.07507 },
      { letter: 'P', frequency: 0.01929 },
      { letter: 'Q', frequency: 0.00095 },
      { letter: 'R', frequency: 0.05987 },
      { letter: 'S', frequency: 0.06327 },
      { letter: 'T', frequency: 0.09056 },
      { letter: 'U', frequency: 0.02758 },
      { letter: 'V', frequency: 0.00978 },
      { letter: 'W', frequency: 0.02360 },
      { letter: 'X', frequency: 0.00150 },
      { letter: 'Y', frequency: 0.01974 },
      { letter: 'Z', frequency: 0.00074 }
    ];

    // Chart code from the provided Observable notebook
    const chart = () => {
      const width = 928;
      const height = 500;
      const marginTop = 30;
      const marginRight = 0;
      const marginBottom = 30;
      const marginLeft = 40;

      const x = d3.scaleBand()
          .domain(d3.groupSort(data, ([d]) => -d.frequency, d => d.letter))
          .range([marginLeft, width - marginRight])
          .padding(0.1);

      const y = d3.scaleLinear()
          .domain([0, d3.max(data, d => d.frequency)])
          .range([height - marginBottom, marginTop]);

      const svg = d3.create("svg")
          .attr("width", width)
          .attr("height", height)
          .attr("viewBox", [0, 0, width, height])
          .attr("style", "max-width: 100%; height: auto;");

      svg.append("g")
          .attr("fill", "steelblue")
        .selectAll()
        .data(data)
        .join("rect")
          .attr("x", d => x(d.letter))
          .attr("y", d => y(d.frequency))
          .attr("height", d => y(0) - y(d.frequency))
          .attr("width", x.bandwidth());

      svg.append("g")
          .attr("transform", `translate(0,${height - marginBottom})`)
          .call(d3.axisBottom(x).tickSizeOuter(0));

      svg.append("g")
          .attr("transform", `translate(${marginLeft},0)`)
          .call(d3.axisLeft(y).tickFormat(y => (y * 100).toFixed()))
          .call(g => g.select(".domain").remove())
          .call(g => g.append("text")
              .attr("x", -marginLeft)
              .attr("y", 10)
              .attr("fill", "currentColor")
              .attr("text-anchor", "start")
              .text("â†‘ Frequency (%)"));

      return svg.node();
    };

    // Append the chart to the observable-graph div
    document.getElementById('observable-graph').appendChild(chart());

    // Handle Stripe subscription
    document.getElementById('subscribe-button').addEventListener('click', async () => {
      try {
        const response = await fetch('/create-checkout-session', { method: 'POST' });
        const session = await response.json();
        const stripe = Stripe('<%= STRIPE_PUBLISHABLE_KEY %>'); // Replace with your Stripe publishable key
        await stripe.redirectToCheckout({ sessionId: session.id });
      } catch (error) {
        console.error('Error:', error);
      }
    });
  </script>
</body>
</html>
